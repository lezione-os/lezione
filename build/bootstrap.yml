sources:
  - name: gcc
    url: "https://ftp.gnu.org/gnu/gcc/gcc-10.2.0/gcc-10.2.0.tar.xz"
    format: "tar.xz"
    subdir: build-tools
    regenerate:
      - args: ["autoconf"]
        workdir: "@THIS_SOURCE_DIR@/gcc-10.2.0"

  - name: binutils
    url: "https://ftp.gnu.org/gnu/binutils/binutils-2.36.tar.xz"
    format: "tar.xz"
    subdir: build-tools
    regenerate:
      - args: ["autoreconf"]
        workdir: "@THIS_SOURCE_DIR@/binutils-2.36"

  - name: limine
    git: "https://github.com/limine-bootloader/limine.git"
    tag: "v2.16-binary"
    subdir: build-tools

  - name: echfs
    git: "https://github.com/echfs/echfs.git"
    branch: master
    subdir: build-tools

  - name: kernel
    subdir: ../src

  - name: system-files
    subdir: ../src

tools:
  - name: limine
    from_source: limine
    compile:
      - args: ["make", "-j@PARALLELISM@", "limine-install"]
        workdir: "@THIS_SOURCE_DIR@"

  - name: echfs
    from_source: echfs
    compile:
      - args: ["make", "-j@PARALLELISM@"]
        workdir: "@THIS_SOURCE_DIR@"

  - name: binutils
    from_source: binutils
    configure:
      - args:
          - "@THIS_SOURCE_DIR@/binutils-2.36/configure"
          - "--prefix=@PREFIX@"
          - "--target=x86_64-elf"
          - "--disable-nls"
          - "--disable-werror"
          - "CFLAGS=-O2"
    compile:
      - args: ["make", "-j@PARALLELISM@"]
    install:
      - args: ["make", "install"]

  - name: gcc
    from_source: gcc
    tools_required:
      - tool: binutils
    configure:
      - args:
          - "@THIS_SOURCE_DIR@/gcc-10.2.0/configure"
          - "--prefix=@PREFIX@"
          - "--target=x86_64-elf"
          - "--without-headers"
          - "--enable-languages=c"
          - "--disable-nls"
          - "CFLAGS=-O2"
          - "CXXFLAGS=-O2"
    stages:
      - name: "compiler"
        compile:
          - args: ["make", "-j@PARALLELISM@", "all-gcc"]
        install:
          - args: ["make", "install-gcc"]
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ["mkdir", "-p", "@PREFIX@/x86_64-elf/bin"]
          - args:
              - "ln"
              - "-sf"
              - "../../../binutils/x86_64-elf/bin/as"
              - "@PREFIX@/x86_64-elf/bin/as"
          - args:
              - "ln"
              - "-sf"
              - "../../../binutils/x86_64-elf/bin/ld"
              - "@PREFIX@/x86_64-elf/bin/ld"

packages:
  - name: system-files
    from_source: system-files
    build:
      # Copy system files
      - args: ["rsync", "-r", "@THIS_SOURCE_DIR@/root/", "@THIS_COLLECT_DIR@/"]

  - name: release-kernel
    from_source: kernel
    tools_required:
      - gcc
    pkgs_required:
      - system-files
    build:
      - args: ["mkdir", "-p", "@THIS_COLLECT_DIR@/boot"]
      - args:
          - "make"
          - "-j@PARALLELISM@"
          - "release"
          - "DESTDIR=@THIS_COLLECT_DIR@/boot"
          - "CC=x86_64-elf-gcc"
        workdir: "@THIS_SOURCE_DIR@"

  - name: debug-kernel
    from_source: kernel
    tools_required:
      - gcc
    pkgs_required:
      - system-files
    build:
      - args: ["mkdir", "-p", "@THIS_COLLECT_DIR@/boot"]
      - args:
          - "make"
          - "-j@PARALLELISM@"
          - "debug"
          - "DESTDIR=@THIS_COLLECT_DIR@/boot"
          - "CC=x86_64-elf-gcc"
        workdir: "@THIS_SOURCE_DIR@"

  - name: limine-stage3
    from_source: limine
    tools_required:
      - limine
    pkgs_required:
      - system-files
    build:
      # Create boot folder
      - args: ["mkdir", "@THIS_COLLECT_DIR@/boot"]
      # Copy limine stage 3
      - args:
          - "cp"
          - "@THIS_SOURCE_DIR@/limine.sys"
          - "@THIS_COLLECT_DIR@/boot/limine.sys"
